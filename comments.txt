/*Добавьте в этот файл пояснения к выбранной модели данных. 
Также вы можете сохранить здесь другие комментарии по проекту, которые вы считаете необходимыми, 
и задать вопросы ревьюеру*/

Пояснения к выбранной модели данных:

Таблица с клиентами (clients)
В этой таблице будут храниться клиенты (покупатели), совершившие покупки автомобилей. Поля: имя клиента (client_name) и номер телефона клиента (phone) обязательно к заполнению.

Таблица с брендами автомобилей (brands)
В этой таблице будут храниться бренды автомобилей и их страна происхождения. Поля: имя бренда (brand_name) и страна происхождения бренда (brand_origin).

Таблица с цветами для автомобилей (colors)
 В этой таблице будут храниться все цвета. Поля: имя цвета (color_name).

Таблица с моделями автомобилей (models)
Создается после таблицы с брендами.
Здесь будут храниться данные о моделях автомобилей.
Поля: Название модели (model_name), потребление бензина (gasoline_consumption) и id бренда. Последний столбец ссылается на столбец с id таблицы с брендами (до создания этой таблицы должна быть создана таблица brands).

Таблица модели и цвета (models_colors)
Создается для реализации связи "многие ко многим" между таблицами models и colors.
Поля: model_id ссылается на поле id таблицы с моделями, color_id ссылается на поле с id таблицы с цветами (до создания этой таблицы должны быть созданы таблицы models и colors).

Таблица с покупками (purchases)
Здесь будут храниться данные о совершенных покупках.
Поля: model_id ссылается на поле с id таблицы с моделями, дата покупки (date_purch) хранит значение даты совершенной покупки, client_id ссылается на поле с id таблицы с клиентами, цена (price) хранит значение цены покупки, скидка (discount) хранит значение скидки для покупки (до создания этой таблицы должны быть созданы таблицы models и clients).

Комментарии к коду:
В файле INITIAL.sql. По заданию предполагалось применение команды \copy из psql , но у меня нет его потому что есть неполадки с Homebrew. Я разбираюсь с этим, но боюсь, что займет слишком много времени, поэтому заполнила данными через интерфейс DBeaver, чтобы этот спринт не наслоился на следующий (на всякий случай в файл INITIAL.sql поместила синтаксис команды COPY)


Комментарии по исправлениям:
1) Добавили в файл DDL.sql в таблицу models_colors первичный ключ, в таблицу purchases внешний ключ ссылающийся на id таблицы models_colors
2) Добавили в файл INSERT.sql заполнение столбца models_colors_id таблицы purchases данными
Уникальность данных для выбора составного ключа для связи с purchases была проверена скриптом:
 SELECT 
   concat(split_part(split_part(auto, ',', 1), ' ', 2), ' ', split_part(split_part(auto, ',', 1), ' ', 3)) AS model
   ,price 
   ,date
   ,person_name 
   ,discount 
   FROM raw_data.sales
   GROUP BY 1,2,3,4,5
   HAVING count(*) > 1;
3) В файле INSERT.sql добавили ключевое слово distinct в скрипт по заполнению таблицы models_colors для удаления дублей
